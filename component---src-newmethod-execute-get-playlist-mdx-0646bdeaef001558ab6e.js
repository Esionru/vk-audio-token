(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{"/TQT":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return b}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("FlsD"),n("q1tI");var a=n("E/Ix"),r=n("hhGP");n("qKvR");function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/newmethod/execute.getPlaylist.mdx"}});var o={_frontmatter:c},i=r.a;function b(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(i,l({},o,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"executegetplaylist"},"execute.getPlaylist"),Object(a.b)("p",null,"Get playlist audios"),Object(a.b)("p",null,"Parameters:"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",l({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",l({parentName:"tr"},{align:null}),"Value"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:null}),"id"),Object(a.b)("td",l({parentName:"tr"},{align:null}),"Id of the playlist")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:null}),"owner_id"),Object(a.b)("td",l({parentName:"tr"},{align:null}),"Id of the owner of the playlist")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:null}),"access_key"),Object(a.b)("td",l({parentName:"tr"},{align:null}),'May be needed when owner id starts with "-"')),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:null}),"audio_offset (optional)"),Object(a.b)("td",l({parentName:"tr"},{align:null}),"Offset to skip that number of audios")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:null}),"audio_count (optional)"),Object(a.b)("td",l({parentName:"tr"},{align:null}),"Maximum number of audios to return")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:null}),"need_playlist (optional)"),Object(a.b)("td",l({parentName:"tr"},{align:null}),"1 - return information about the playlist: title, followers, plays..., 0 - don't return it (default)")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",l({parentName:"tr"},{align:null}),"need_owner (optional)"),Object(a.b)("td",l({parentName:"tr"},{align:null}),"1 - return information about the owner: photo, type, name..., 0 - don't return it (default)")))),Object(a.b)("p",null,"Access key must match access key of the playlist, for example, returned by catalog.getAudioArtist method "),Object(a.b)("p",null,"Example (VK Official):"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-php"}),'\n$id = 12345;\n$owner_id = -67890;\n$access_key = \'1234abc567\';\n\ncurl_setopt(\n    $ch, CURLOPT_URL, "https://api.vk.com/method/execute.getPlaylist"\n);\ncurl_setopt($ch, CURLOPT_POSTFIELDS,\n    "v=5.116&https=1&id=$id&owner_id=${owner_id}&access_key=${access_key}".\n    "&need_playlist=1&need_owner=0&lang=en&access_token=".TOKEN\n);\n\n')),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-php"}),"<?php\n\ninclude __DIR__.'/../../autoloader.php';\n\nuse Vodka2\\VKAudioToken\\SupportedClients;\n\n//Credentials obtained by example_vkofficial.php script\ndefine('TOKEN', $argv[1]);\ndefine('USER_AGENT', SupportedClients::VkOfficial()->getUserAgent());\n$ch = curl_init();\n\ncurl_setopt($ch,CURLOPT_HTTPHEADER, array('User-Agent: '.USER_AGENT));\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\ncurl_setopt($ch, CURLOPT_POST, 1);\n\n$id = 12345;\n$owner_id = -67890;\n$access_key = '1234abc567';\n\ncurl_setopt(\n    $ch, CURLOPT_URL, \"https://api.vk.com/method/execute.getPlaylist\"\n);\ncurl_setopt($ch, CURLOPT_POSTFIELDS,\n    \"v=5.116&https=1&id=$id&owner_id=${owner_id}&access_key=${access_key}\".\n    \"&need_playlist=1&need_owner=0&lang=en&access_token=\".TOKEN\n);\n\necho json_encode(json_decode(curl_exec($ch)), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE).\"\\n\\n\";\n")))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/newmethod/execute.getPlaylist.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-newmethod-execute-get-playlist-mdx-0646bdeaef001558ab6e.js.map